/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.group.oodjAssignment;

import com.group.oodjAssignment.administrator.AdminDashboard;
import com.group.oodjAssignment.customer.CustomerDashboardForm;
import com.group.oodjAssignment.manager.MaintenanceIssue;
import com.group.oodjAssignment.manager.Manager;
import com.group.oodjAssignment.manager.ManagerGUI;
import com.group.oodjAssignment.manager.SalesData;
import com.group.oodjAssignment.scheduler.SchedulerDashboardForm;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Saadin
 */
public class LoginForm extends javax.swing.JFrame {

    /**
     * Creates new form LoginForm
     */
    public LoginForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        submitButton = new javax.swing.JButton();
        emailTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        passwordTextField = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Login | Hall Symphony");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setText("Login Now!");

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel2.setText("Email");

        submitButton.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        submitButton.setText("Submit");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        emailTextField.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel4.setText("Password");

        passwordTextField.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(133, 133, 133))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(passwordTextField))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(52, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(37, 37, 37))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(submitButton)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private boolean validateData() {
        String email = emailTextField.getText();
        String password = passwordTextField.getText();

        if (email.isEmpty() || password.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(
                    this,
                    "Please Fill All Fields!",
                    "Error",
                    javax.swing.JOptionPane.ERROR_MESSAGE
            );
            return false;
        }

        if (!email.matches("^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$")) {
            javax.swing.JOptionPane.showMessageDialog(
                    this,
                    "Invalid Email Address!",
                    "Error",
                    javax.swing.JOptionPane.ERROR_MESSAGE
            );
            return false;
        }

        if (password.length() < 5) {
            javax.swing.JOptionPane.showMessageDialog(
                    this,
                    "Invalid Password!",
                    "Error",
                    javax.swing.JOptionPane.ERROR_MESSAGE
            );
            return false;
        }

        return true;
    }

  private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
      if (!validateData()) {
          return;
      }

      try {
          String email = emailTextField.getText();
          String password = passwordTextField.getText();

          java.io.File file = new java.io.File("credientials.txt");
          if (!file.exists()) {
              file.createNewFile();
          }

          java.io.BufferedReader br = new java.io.BufferedReader(
                  new java.io.FileReader(file)
          );

          String line;
          boolean found = false;
          String role = "";

          while ((line = br.readLine()) != null) {
              if (line.equals(email)) {
                  if (br.readLine().equals(password)) {
                      role = br.readLine();
                      br.readLine();
                      found = true;
                      break;
                  }
              }
          }
          br.close();

          if (!found) {
              javax.swing.JOptionPane.showMessageDialog(
                      this,
                      "Invalid Email or Password!",
                      "Error",
                      javax.swing.JOptionPane.ERROR_MESSAGE
              );
              return;
          }

          if (role.equals("scheduler")) {
              SchedulerDashboardForm schedulerDashboard = new SchedulerDashboardForm();
              schedulerDashboard.setVisible(true);
              SchedulerDashboardForm.loggedInUser = email;
              this.dispose();
          } else if (role.equals("customer")) {
              CustomerDashboardForm customerDashboard = new CustomerDashboardForm();
              customerDashboard.setVisible(true);
              CustomerDashboardForm.loggedInUser = email;
              this.dispose();
          } else if (role.equals("administrator")) {
              AdminDashboard adminDashboard = new AdminDashboard();
              adminDashboard.setVisible(true);
              this.dispose();
          } else if (role.equals("manager")) {
              Manager manager = new Manager(email, password);

              // Create Sales Data
              ArrayList<SalesData> salesDataList = new ArrayList<>();
              salesDataList.add(new SalesData("Weekly", 5000));
              salesDataList.add(new SalesData("Monthly", 20000));
              salesDataList.add(new SalesData("Yearly", 240000));  // Added yearly sales

              // Create Maintenance Issues
              ArrayList<MaintenanceIssue> maintenanceIssues = new ArrayList<>();
              maintenanceIssues.add(new MaintenanceIssue("Air conditioning issue in Banquet Hall"));
              maintenanceIssues.add(new MaintenanceIssue("Lighting problem in Auditorium"));

              // Launch GUI
              ManagerGUI gui = new ManagerGUI(manager, salesDataList, maintenanceIssues);
              gui.setVisible(true);
              this.dispose();
          } else {
              javax.swing.JOptionPane.showMessageDialog(
                      this,
                      "Invalid Role!",
                      "Error",
                      javax.swing.JOptionPane.ERROR_MESSAGE
              );
          }
      } catch (java.io.IOException e) {
          javax.swing.JOptionPane.showMessageDialog(
                  this,
                  e.getMessage(),
                  "Error",
                  javax.swing.JOptionPane.ERROR_MESSAGE
          );
      }
  }//GEN-LAST:event_submitButtonActionPerformed

  private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
      WelcomeForm.getInstance().setVisible(true);
      dispose();
  }//GEN-LAST:event_formWindowClosing

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField emailTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPasswordField passwordTextField;
    private javax.swing.JButton submitButton;
    // End of variables declaration//GEN-END:variables
}
